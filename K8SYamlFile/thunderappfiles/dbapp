


apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      apps: dbapp
  template:
    metadata:
      labels:
        app: frontend
        apps: dbapp
    spec:
      containers:
        - name: frontend
          image: fridade/fritz:dbfront_end
          ports:
            - containerPort: 80
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: fritz
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: damien
            - name: ME_CONFIG_MONGODB_SERVER
              value: DB name
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: NodePort
  selector:
    app: frontend
    apps: dbapp
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 80


---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
    apps: dbapp
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mongodb-sc
  hostPath:
    path: /data/mongodb
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: mongodb-sc
  resources:
    requests:
      storage: 2Gi
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongodb-sc
provisioner:  dobs.csi.digitalocean.com
volumeBindingMode: Immediate
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-deployment
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
      apps: dbapp
  template:
    metadata:
      labels:
        app: mongodb
        apps: dbapp
    spec:
      containers:
        - name: mongodb
          image: mongo
          ports:
            - containerPort: 27017
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: fritz
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: damien
            - name: ME_CONFIG_MONGODB_SERVER
              value: DB name
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc



# kubectl exec frontend-pod -c frontend -- printenv
# kubectl exec frontend-bdcc6cd65-4pzwp -c frontend --printenv
#kubectl exec -it <pod-name> -- env
# kubectl exec -it frontend-bdcc6cd65-4pzwp -- env
