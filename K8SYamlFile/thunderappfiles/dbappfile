
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: databaseapp

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
    apps: dbapp
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-frontendlud
  labels:
    app: frontend
    apps: dbapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      apps: dbapp
  template:
    metadata:
      labels:
        app: frontend
        apps: dbapp
    spec:
      containers:
        - name: frontend-containerlud
          image: fridade/fritz:dbfront_end
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: fritz
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: damien
            - name: ME_CONFIG_MONGODB_SERVER
              value: mongodb-service

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: frontend-role
# rules:
#   - apiGroups:
#       - ""
#     resources:
#       - pods
#     verbs:
#       - get
#       - watch
#       - list
#   - apiGroups:
#       - extensions
#     resources:
#       - ingresses
#     verbs:
#       - get
#       - watch
#       - list

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: frontend-role-binding
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: frontend-role
# subjects:
#   - kind: ServiceAccount
#     name: databaseapp
#     namespace: ludivine

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
    apps: dbapp
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: mongo-sc

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pvludi
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem 
  storageClassName: mongo-sc
  hostPath:
    path: /data/mongo-sc


---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongo-sc
provisioner: dobs.csi.digitalocean.com
volumeBindingMode: Immediate

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-statefulset
  labels:
    app: mongodb
    apps: dbapp
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
      apps: dbapp
  template:
    metadata:
      labels:
        app: mongodb
        apps: dbapp
    spec:
      serviceAccountName: databaseapp
      containers:
        - name: mongodb
          image: mongo
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: fritz
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: damien
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: mongo-sc

